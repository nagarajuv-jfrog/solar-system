name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: read
env:
  MONGO_URI: ${{ secrets.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  DOCKER_REPO: 'codeninjas-proj-nag-docker-local'
  IMAGE_NAME: 'mongodb:latest'
  JF_URL: https://${{ vars.JF_URL }}/
  DOCKER_CLI_EXPERIMENTAL: enabled
jobs:
    unit-testing:
        name: Unit Testing
        container:
        services:
          mongo-db:
            image: codeninjas-proj-nag-docker-local/mongodb:latest
            ports:
              - 27017:27017
        strategy: 
          matrix:
            nodejs_version: [20]
            operating_system: [ubuntu-latest, macos-latest]
            exclude:
              - nodejs_version: 20
                operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps:
          - name: Setup JFrog CLI
            uses: jfrog/setup-jfrog-cli@v4
            id: setup-cli
            env:
              MONGO_URI: 'mongodb://${{ vars.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@localhost:27017/superData'
              JF_URL: https://${{ vars.JF_URL }}/
              JF_PROJECT: ${{ vars.JF_PROJECT }}
            with:
                oidc-provider-name: jfrog-github-oidc
                
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Setup NodeJS Version
            uses: actions/setup-node@v4
            with:
              node-version: 20

          - name: Cache NPM Dependencies
            uses: actions/cache@v3
            with:
              path: node_modules
              key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      
          - name: Install Dependencies
            run: npm install
      
          - name: Unit Testing
            run: npm test
            id: nodejs-unit-testing-step
            
          - name: Archive Test Result
            if: always()
            uses: actions/upload-artifact@v4
            with:
              name: Mocha-Test-Result-${{github.run_number}}
              path: test-results.xml

    # code-coverage:
    #       name: Code Coverage
    #       container:
    #         image: node:18
    #       services:
    #         mongo-db:
    #           image: siddharth67/mongo-db:non-prod
    #           options:
    #             --name mongo
    #       env:
    #         MONGO_URI: 'mongodb://${{ vars.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@mongo:27017/superData'
    #       runs-on: ubuntu-latest
    #       steps:
    #       - name: Checkout Repository
    #         uses: actions/checkout@v4

    #       - name: Cache NPM Dependencies
    #         uses: actions/cache@v3
    #         with:
    #           path: node_modules
    #           key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      
    #       - name: Install Dependencies
    #         run: npm install
      
    #       - name: Check Code Coverage
    #         id: nodejs-code-coverage-step
    #         run: npm run coverage
            
    #       - name: Archive Test Result
    #         if: always()
    #         uses: actions/upload-artifact@v4
    #         with:
    #           name: Code-Coverage-Result-${{github.run_number}}
    #           path: coverage

    # docker:
    #   name: containerization
    #   needs: unit-testing
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout repo
    #       uses: actions/checkout@v4
    #     - name: Dockerlogin
    #       uses: docker/login-action@v3
    #       with:
    #         username: ${{ vars.DOCKER_USER }}
    #         password: ${{ secrets.DOCKER_PASSWORD }}

    #     - name: Dockerbuild
    #       uses: docker/build-push-action@v4
    #       with:
    #         context: .
    #         push: true
    #         tags: ${{ vars.DOCKER_USER }}/solar-system:${{ github.sha }}
